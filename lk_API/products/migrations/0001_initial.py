# Generated by Django 4.0.3 on 2022-08-18 16:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, max_length=250)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_mark', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=999, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)])),
                ('life_style', models.IntegerField(blank=True, choices=[(0, '-'), (1, 'Новинка'), (2, 'Стандарт'), (3, 'Вывод'), (4, 'Под заказ'), (5, 'Акция')])),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, max_length=250)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_mark', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=999, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)])),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('article', models.CharField(max_length=100)),
                ('life_style', models.IntegerField(blank=True, choices=[(0, '-'), (1, 'Новинка'), (2, 'Стандарт'), (3, 'Вывод'), (4, 'Под заказ'), (5, 'Акция')], null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='products.collection')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='products.factory')),
            ],
            options={
                'ordering': ['article'],
            },
        ),
        migrations.CreateModel(
            name='Prop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PropValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propvalues', to='products.product')),
                ('prop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propvalues', to='products.prop')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='props',
            field=models.ManyToManyField(blank=True, related_name='products', through='products.PropValue', to='products.prop'),
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('image', models.URLField(blank=True, max_length=250)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('main', models.BooleanField(default=False)),
                ('deleted_mark', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=99, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='products.product')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='country',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='products.country'),
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_mark', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='products.product')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
